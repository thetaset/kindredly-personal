import{a as d,d as o,v as a,o as c,_ as f}from"./components.global5n24RCIC.js";import{d as m,j as p,k as l,K as k,R as y,s as T,r as w,i as h}from"./@vueC3Nhqlrl.js";const v=m({name:"ProviderSigninButton",mixins:[d],props:{register:{type:Boolean,required:!1,default:!1},loginType:{type:String,required:!0}},emits:["updateData","hadError","close","loading"],data(){return{errorMessage:null,loading:!1,sessionToken:null,checking:!1}},mounted(){},computed:{iconName:function(){return this.loginType=="google"?"google":this.loginType=="apple"?"apple":""},providerName:function(){return this.loginType=="google"?"Google":this.loginType=="apple"?"Apple":""},buttonText:function(){return`${this.register?"Register":"Sign-in"} with ${this.providerName}`}},methods:{async extenSignin(){if(this.$emit("loading",!0),this.loading=!0,this.loginType=="google"){this.$emit("close",!0);const e=await this.sendReq("/auth/providerLogin/create");if(!e.success)throw new Error("Error getting session token");this.sessionToken=e.result.sessionToken,o("sessionToken",this.sessionToken);const s=this.config.googleClientId;let n="/auth/providerLogin/extension";this.register&&(n="/auth/providerRegister/extension");const i=`https://accounts.google.com/o/oauth2/v2/auth?scope=https%3A//www.googleapis.com/auth/userinfo.profile&include_granted_scopes=true&response_type=token&state=${this.sessionToken}&redirect_uri=${encodeURIComponent(this.config.serverHostname+n)}&client_id=${s}&prompt=select_account`;if(this.config.appType=="android"){const t=await this.sendReq("/client/nativeMessage",{type:"webUIEvent",data:{eventType:"googleSignin",url:i}});if(t.success)o("response",t);else{console.error("Error:",t.message),this.errorMessage=t.message;return}}else this.config.appType=="ios"?await a.sendAppRequest({action:"SIGNIN_URL",value:{url:i}}):this.isExtension?chrome.tabs.create({url:i}):c(i,"_blank");await this.checkLoginStatus()}else if(this.loginType=="apple"){this.$emit("close",!0);const e=await this.sendReq("/auth/providerLogin/create");if(!e.success)throw new Error("Error getting session token");this.sessionToken=e.result.sessionToken,o("sessionToken",this.sessionToken);const s=this.config.appleClientId,n=this.config.appleSigninRedirectURI;let i=null;this.register?i=`session%3D${this.sessionToken},authType%3Dregister`:i=`session%3D${this.sessionToken},authType%3Dsign-up`;const t=`https://appleid.apple.com/auth/authorize?response_type=code%20id_token&response_mode=form_post&client_id=${s}&state=${i}&redirect_uri=${encodeURIComponent(n)}`;if(this.config.appType=="android"){const r=await this.sendReq("/client/nativeMessage",{type:"webUIEvent",data:{eventType:"appleSignin",url:t}});if(r.success)o("response",r);else{console.error("Error:",r.message),this.errorMessage=r.message;return}}else this.config.appType=="ios"?await a.sendAppRequest({action:"SIGNIN_URL",value:{url:t}}):this.isExtension?chrome.tabs.create({url:t}):c(t,"_blank");await this.checkLoginStatus()}},async sleep(e){return new Promise(s=>setTimeout(s,e))},async checkLoginStatus(){let e=!1,s=0,n=100;for(;!e;){if(await this._check()){e=!0;return}else o("Not authorized"),await this.sleep(2e3),s++;if(s>n){o("Max retries reached"),this.loading=!1,this.$emit("hadError","Sign-in was not completed within the time limit. Please try again.");return}}},async forceRefresh(){await this._check()},async _check(){if(this.checking)return!1;this.checking=!0;try{const e=await this.sendReq("/auth/providerLogin/status",{sessionToken:this.sessionToken});if(e.success){const s=e.result,{authorized:n,tokenData:i}=s;if(n){const t=await this.sendReq("/client/tokenLogin",{token:i.token});return t.success?(await this.RefreshAll(!0,!1),this.loading=!1,this.config.appType=="ios"&&await a.sendAppRequest({action:"CLOSE_SIGNIN_WINDOW"}),this.$emit("updateData",!0),this.register?location.replace(this.appPrefix+"#/setup/account"):location.replace(this.appPrefix)):(console.error("Error:",t.message),this.errorMessage=t.message,this.loading=!1,this.$emit("hadError","An error occurred during Sign-in. Please try again.")),!0}else return!1}else throw this.loading=!1,this.$emit("hadError","An error occurred during Sign-in. Please try again."),new Error("Error getting session token")}finally{this.checking=!1}}},created(){}}),_={class:"d-flex justify-content-center align-items-center"},R={key:0,class:"ms-2"};function $(e,s,n,i,t,r){const u=w("b-icon");return h(),p("div",_,[l("div",{role:"button",onClick:s[0]||(s[0]=g=>e.extenSignin()),class:"rounded border px-3 py-2 d-flex justify-content-center align-items-center providerButton"},[k(u,{icon:e.iconName,class:"me-2"},null,8,["icon"]),l("span",null,y(e.buttonText),1)]),e.loading?(h(),p("div",R,[l("div",{class:"linklike px-1",onClick:s[1]||(s[1]=g=>e.forceRefresh())}," refresh now ")])):T("",!0)])}const x=f(v,[["render",$]]);export{x as P};
