import{a as g,p as f,H as b,_ as y}from"./components.globalBic2x0kT.js";import{d as c,j as o,K as i,z as n,s as d,r as h,i as r,Q as p}from"./@vueC3Nhqlrl.js";const O=c({name:"OptionsComponent",mixins:[g],components:{},props:{user:{type:Object,default:null,required:!1},selectedOptions:{type:Array,default:()=>[]}},data(){return{targetUser:null,options:null,errorMessage:null}},mounted(){},computed:{isCurrentUser(){var e,s;return((e=this.currentUser)==null?void 0:e._id)==((s=this.targetUser)==null?void 0:s._id)},targetUserId(){var e;return(e=this.targetUser)==null?void 0:e._id}},methods:{prettyTimePast:f,prettyTime:b,isSelectedOption(e){return this.selectedOptions&&this.selectedOptions.includes(e)},updateOptions(){this.sendReq("/user/options/update",{userId:this.targetUserId,options:this.options}).then(e=>{e.success?(this.loadOptions(),this.sendReq("/client/updatePlugins"),this.errorMessage=null):(console.error("Error:",e.message),this.errorMessage=e.message),this.$emit("updatedOptions",this.options)})},loadOptions(){this.sendReq("/user/options/get",{userId:this.targetUserId,refresh:!0}).then(e=>{e.success?(this.options=e.result,this.errorMessage=null):(console.error("Error:",e.message),this.errorMessage=e.message)})},async loadData(){this.loadOptions()}},created(){this.targetUser=this.user||this.currentUser,this.loadData()}}),w={key:0,class:"mt-3"},U={key:1,class:"mt-3"},C={key:2,class:"mt-3"},v={key:3},E={key:0,class:"mt-3"};function V(e,s,A,k,S,$){var u;const a=h("b-form-checkbox"),l=h("b-form-group");return r(),o("div",null,[e.isAdminUser&&e.isSelectedOption("logActivity")&&e.options?(r(),o("div",w,[i(l,{class:"form-group",description:"This will log all browsing history for this user while using Kindredly"},{default:n(()=>{var t;return[i(a,{modelValue:e.options.logActivity,"onUpdate:modelValue":s[0]||(s[0]=m=>e.options.logActivity=m),switch:"",onChange:s[1]||(s[1]=m=>e.updateOptions()),disabled:!((t=e.encStatus)!=null&&t.userEncSetup)},{default:n(()=>s[6]||(s[6]=[p(" Log Browsing History ")])),_:1},8,["modelValue","disabled"])]}),_:1})])):d("",!0),e.isAdminUser&&e.isSelectedOption("whitelistingEnabled")&&e.options?(r(),o("div",U,[i(l,{class:"form-group",description:"This will prevent the user from accessing any websites not in the library when using the browser extension or mobile app."},{default:n(()=>[i(a,{modelValue:e.options.whitelistingEnabled,"onUpdate:modelValue":s[2]||(s[2]=t=>e.options.whitelistingEnabled=t),switch:"",onChange:s[3]||(s[3]=t=>e.updateOptions())},{default:n(()=>s[7]||(s[7]=[p(" Only allow access to websites in user's library (recommended for children) ")])),_:1},8,["modelValue"])]),_:1})])):d("",!0),e.isAdminUser&&e.aiChatSupported&&e.options&&e.isSelectedOption("aiChatEnabled")?(r(),o("div",C,[i(l,{class:"form-group",description:"Enable AI chat for this user"},{default:n(()=>[i(a,{modelValue:e.options.aiChatEnabled,"onUpdate:modelValue":s[4]||(s[4]=t=>e.options.aiChatEnabled=t),switch:"",onChange:s[5]||(s[5]=t=>e.updateOptions())},{default:n(()=>s[8]||(s[8]=[p(" Enable AI Chat (Experimental) ")])),_:1},8,["modelValue"])]),_:1})])):(r(),o("div",v,[e.isAdminUser&&!((u=e.encStatus)!=null&&u.userEncSetup)?(r(),o("div",E," For usage history to be encrypted, please enable encryption in settings. ")):d("",!0)]))])}const T=y(O,[["render",V]]);export{T as O};
